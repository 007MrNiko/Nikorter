from interpreter_defcode_v2 import *
from kivy.animation import Animation

def move_algorithm(self):
	anim = []
	position = list(self.robot.pos)
	c_r = self.robot.rgb
	color = (c_r[0], c_r[1], c_r[2])
	anim.append(move_up(1, 'in_out_cubic', position))
	position = list(anim[-1][1])
	for i in range(2):
		anim.append(move_right(1, 'in_out_cubic', position))
	position = list(anim[-1][1])
	anim.append(move_up(1, 'out_cubic', position))
	position = list(anim[-1][1])
	anim.append(change_color((0.30196078431372547, 0.8901960784313725, 0.7647058823529411), position))
	color = (0.30196078431372547, 0.8901960784313725, 0.7647058823529411)
	position = list(anim[-1][1])
	anim.append(move_left(4, 'in_out_circ', position))
	position = list(anim[-1][1])
	anim.append(move_down(2, 'in_out_cubic', position))
	position = list(anim[-1][1])
	anim.append(move_left(1, 'in_out_cubic', position))
	position = list(anim[-1][1])
	if color == (0.30196078431372547, 0.8901960784313725, 0.7647058823529411):
		anim.append(change_color((0.9176470588235294, 0.1568627450980392, 0.1843137254901961), position))
		color = (0.9176470588235294, 0.1568627450980392, 0.1843137254901961)
	anim.append(move_up(1, 'in_out_cubic', position))
	position = list(anim[-1][1])
	anim.append(move_left(1, 'in_out_cubic', position))
	position = list(anim[-1][1])
	anim.append(move_down(1, 'in_expo', position))
	position = list(anim[-1][1])
	if color == (0.30196078431372547, 0.8901960784313725, 0.7647058823529411):
		anim.append(change_color((0.9176470588235294, 0.1568627450980392, 0.1843137254901961), position))
		color = (0.9176470588235294, 0.1568627450980392, 0.1843137254901961)
	elif color == (0.9176470588235294, 0.1568627450980392, 0.1843137254901961):
		anim.append(change_color((0.984313725490196, 0.9647058823529412, 0.0), position))
		color = (0.984313725490196, 0.9647058823529412, 0.0)
	anim.append(move_left(1, 'in_out_cubic', position))
	position = list(anim[-1][1])
	anim.append(move_up(2, 'in_out_cubic', position))
	position = list(anim[-1][1])
	anim.append(move_right(1, 'in_out_cubic', position))
	position = list(anim[-1][1])
	anim.append(move_up(3, 'in_out_cubic', position))
	position = list(anim[-1][1])
	if color == (0.30196078431372547, 0.8901960784313725, 0.7647058823529411):
		anim.append(change_color((0.9176470588235294, 0.1568627450980392, 0.1843137254901961), position))
		color = (0.9176470588235294, 0.1568627450980392, 0.1843137254901961)
	elif color == (0.9176470588235294, 0.1568627450980392, 0.1843137254901961):
		anim.append(change_color((0.984313725490196, 0.9647058823529412, 0.0), position))
		color = (0.984313725490196, 0.9647058823529412, 0.0)
	else:
		anim.append(change_color((0.3137254901960784, 0.8392156862745098, 0.1450980392156863), position))
		color = (0.3137254901960784, 0.8392156862745098, 0.1450980392156863)
	position = list(anim[-1][1])
	anim.append(move_right(1, 'in_out_cubic', position))
	position = list(anim[-1][1])
	anim.append(move_up(1, 'in_out_back', position))
	position = list(anim[-1][1])
	anim.append(move_right(1, 'in_out_cubic', position))
	position = list(anim[-1][1])
	anim.append(move_up(1, 'in_out_circ', position))
	position = list(anim[-1][1])
	anim.append(move_right(1, 'in_out_bounce', position))
	position = list(anim[-1][1])
	anim.append(move_down(1, 'in_out_cubic', position))
	position = list(anim[-1][1])
	if color == (0.30196078431372547, 0.8901960784313725, 0.7647058823529411):
		anim.append(change_color((0.9176470588235294, 0.1568627450980392, 0.1843137254901961), position))
		color = (0.9176470588235294, 0.1568627450980392, 0.1843137254901961)
	elif color == (0.9176470588235294, 0.1568627450980392, 0.1843137254901961):
		anim.append(change_color((0.984313725490196, 0.9647058823529412, 0.0), position))
		color = (0.984313725490196, 0.9647058823529412, 0.0)
	elif color == (0.3137254901960784, 0.8392156862745098, 0.1450980392156863):
		anim.append(change_color((0.054901960784313725, 0.3176470588235294, 0.8823529411764706), position))
		color = (0.054901960784313725, 0.3176470588235294, 0.8823529411764706)
	elif color == (1.0, 1.0, 1.0):
		anim.append(change_color((0.984313725490196, 0.9647058823529412, 0.0), position))
		color = (0.984313725490196, 0.9647058823529412, 0.0)
	else:
		anim.append(change_color((0.3137254901960784, 0.8392156862745098, 0.1450980392156863), position))
		color = (0.3137254901960784, 0.8392156862745098, 0.1450980392156863)
	position = list(anim[-1][1])
	anim.append(move_right(1, 'in_out_cubic', position))
	position = list(anim[-1][1])
	anim.append(move_down(1, 'linear', position))
	position = list(anim[-1][1])
	anim.append(move_left(2, 'in_out_cubic', position))
	position = list(anim[-1][1])
	anim.append(move_down(1, 'in_out_cubic', position))
	position = list(anim[-1][1])
	for i in range(3):
		anim.append(move_right(1, 'in_out_cubic', position))
	position = list(anim[-1][1])
	for i in range(3):
		anim.append(move_up(1, 'in_out_cubic', position))
	position = list(anim[-1][1])
	anim.append(move_left(1, 'in_out_cubic', position))
	position = list(anim[-1][1])
	anim.append(move_up(1, 'out_quad', position))
	position = list(anim[-1][1])
	anim.append(move_right(1, 'in_out_cubic', position))
	position = list(anim[-1][1])
	anim.append(move_up(1, 'in_out_cubic', position))
	position = list(anim[-1][1])
	anim.append(move_right(1, 'in_out_cubic', position))
	position = list(anim[-1][1])
	anim.append(change_color((0.4196078431372549, 0.8941176470588236, 0.7490196078431373), position))
	color = (0.4196078431372549, 0.8941176470588236, 0.7490196078431373)
	position = list(anim[-1][1])
	anim.append(move_up(2, 'in_out_cubic', position))
	position = list(anim[-1][1])
	anim.append(change_color((0.9882352941176471, 0.33725490196078434, 0.6039215686274509), position))
	color = (0.9882352941176471, 0.33725490196078434, 0.6039215686274509)
	position = list(anim[-1][1])
	anim.append(move_left(1, 'in_out_circ', position))
	position = list(anim[-1][1])
	anim.append(move_up(1, 'in_out_cubic', position))
	position = list(anim[-1][1])
	anim.append(move_left(1, 'in_out_cubic', position))
	position = list(anim[-1][1])
	anim.append(change_color((1.0, 1.0, 1.0), position))
	color = (1.0, 1.0, 1.0)
	position = list(anim[-1][1])
	animator = Animation()
	for i in range(len(anim)):
		animator += anim[i][0]
	animator.start(self.robot)
